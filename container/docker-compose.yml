version: '3.9'

services:
  mysql:
    image: mysql:8.0.34
    container_name: mysql-8.0.34
    environment:
      MYSQL_ROOT_USER: admin
      MYSQL_ROOT_PASSWORD: admin!23
      MYSQL_DATABASE: crawl
      TZ: Asia/Seoul
    volumes:
      - C:/home/data/mysql-crawl:/var/lib/mysql
      - C:/home/project/crawler/container:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"

  mongo1:
    image: mongo:5.0
    container_name: mongo1
    ports:
      - "27017:27017"
    volumes:
      - C:/home/data/mongodb:/data/db
      - C:/home/data/key/mongodb.key:/etc/mongodb.key
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin!23
      - MONGO_INITDB_DATABASE=crawler
      - TZ=Asia/Seoul
    command: mongod --replSet rs0 --keyFile /etc/mongodb.key --bind_ip_all

  mongo2:
    image: mongo:5.0
    container_name: mongo2
    ports:
      - "27018:27017"
    volumes:
      - C:/home/data/mongodb2:/data/db
      - C:/home/data/key/mongodb.key:/etc/mongodb.key
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin!23
      - MONGO_INITDB_DATABASE=crawler
      - TZ=Asia/Seoul
    command: mongod --replSet rs0 --keyFile /etc/mongodb.key --bind_ip_all

  mongo3:
    image: mongo:5.0
    container_name: mongo3
    ports:
      - "27019:27017"
    volumes:
      - C:/home/data/mongodb3:/data/db
      - C:/home/data/key/mongodb.key:/etc/mongodb.key
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin!23
      - MONGO_INITDB_DATABASE=crawler
      - TZ=Asia/Seoul
    command: mongod --replSet rs0 --keyFile /etc/mongodb.key --bind_ip_all

  mongosetup:
    image: mongo:5.0
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./mongo_setup.sh:/scripts/mongo_setup.sh
    restart: "no"
    entrypoint: [ "bash", "/scripts/mongo_setup.sh" ]

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      TZ: Asia/Seoul
    volumes:
      - C:/home/data/zookeeper:/data
    networks:
      - crawler-network

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      BITNAMI_DEBUG: 'yes'
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      TZ: Asia/Seoul
    volumes:
      - C:/home/data/kafka:/var/lib/kafka
    networks:
      - crawler-network


  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:29092'
      KAFKA_CLUSTERS_0_ZOOKEEPER: 'zookeeper:2181'
    volumes:
      - C:/home/data/kafka:/kafka-ui/db
    networks:
      - crawler-network

  jobmanager:
    container_name: jobmanager
    image: flink:1.18.0
    expose:
      - "8081"
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      FLINK_PROPERTIES: |-
        jobmanager.rpc.address: jobmanager
        web.upload.dir: /opt/flink/flink-web
        env.TZ: Asia/Seoul
    volumes:
      - C:/home/data/flink/flink-web:/opt/flink/flink-web
      - C:/home/data/flink/usrlib:/opt/flink/usrlib

  taskmanager:
    container_name: taskmanager
    image: flink:1.18.0
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |-
        jobmanager.rpc.address: jobmanager
        env.TZ: Asia/Seoul
    volumes:
      - C:/home/data/flink/usrlib:/opt/flink/usrlib

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "3015:80"
    volumes:
      - C:/home/data/key:/key

#  redis:
#    image: docker.io/bitnami/redis:6.2
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
#      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
#    ports:
#      - '6379:6379'
#    volumes:
#      - C:\home\data\redis:/bitnami/redis/data


networks:
  crawler-network:
    driver: bridge